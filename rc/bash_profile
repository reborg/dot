test -r /sw/bin/init.sh && . /sw/bin/init.sh

# different color scheme for the console
#export CLICOLOR=1
#export LSCOLORS=Gxfxcxdxbxegedabagacad
#export SVN_EDITOR=vi

# longer bash history please
HISTFILESIZE=2500

# useful alias
alias p='cd -'
alias rm='rm -i'
alias cp='cp -i'
alias mv='mv -i'
alias l='ls -lartG'
alias ls='ls -G'
alias s='cd ..'
alias finder='open -a finder .'
alias tailf='tail -f'
alias yy='pwd | tr -d "\n" | pbcopy' # yield current dir to clipboard
alias tomcat='cd /usr/local/Cellar/tomcat/7.0.42/libexec'
alias top='top -o cpu -O +rsize -s 5 -n 20'
alias e='vi'

# LEININGEN
alias lm='lein midje :filter -slow'
alias lt='lein with-profile test test'
alias lr='lein repl'
alias lc='lein cucumber'
la(){ lein cljsbuild auto $1; }
alias la='lein cljsbuild auto'

# HASKELL
alias cb='cabal configure; cabal build'
alias ci='cabal configure; cabal install --dependencies-only'
alias cre='cabal configure; cabal repl'
alias cru='cabal configure; cabal run'
alias ct='cabal configure --enable-tests; cabal install --only-dependencies --enable-tests; cabal test'

# RAILS
alias rs='rails server'
alias rc='rails console'

# TMUX
alias tls='tmux list-sessions'
# tns(){ tmux new-session -s $1; }
alias tns='tmux new-session -s ${PWD##*/}'
tos(){ tmux attach-session -t $1; }
alias tcs='tns'
alias tas='tmux attach-session -t'
tks(){ tmux kill-session -t $1; }
alias tos='tas'
alias tks='tmux kill-session -t'

# SVN
alias sign='export SVN_EDITOR=vi; svn propedit svn:ignore .'
alias sup='svn up'
alias sst='svn st'
alias sst='svn diff | less -R'
sci(){ svn commit -m $1; }
alias sci='svn commit -m'
alias sadd="svn status | grep ? | sed -e 's/?      //g' | xargs -J% svn add %"
alias srm="svn status | grep ! | sed -e 's/!      //g' | xargs -J% svn remove %"
alias srev="svn status | grep M | sed -e 's/M      //g' | xargs -J% svn revert %"

# maven
#mcuke(){ mvn -o -pwithargs cuke4duke:cucumber -dcukeargs="--tag $@"; }
#alias mcuke="mvn -o -pwithargs cuke4duke:cucumber -dcukeargs=\"--tag $@\""
alias mrun='mvn clean; mvn install'
alias mtest='mvn -o surefire-report:report; open target/site/surefire-report.html'
alias mcover='mvn -o cobertura:cobertura; open target/site/cobertura/index.html'
export MAVEN_OPTS="-Xmx512m -Duser.timezone=UTC"

# GIT
feature(){ git flow feature start $1; }
finish(){ git flow feature finish $1; }
alias feature='git flow feature start'
alias finish='git flow feature finish'
alias gst='git status'
alias gbr='git branch'
alias gco='git checkout'
gci(){ git commit -m $1; }
alias gci='git commit -m'
alias glog='git log --oneline --decorate --graph'
alias gi='git-info.sh'
alias gp='git pull --rebase'
alias gd='git diff'

# Aliased personal projects
alias prj='cd /me/prj'
alias my='cd /me/prj/my'
alias tracking='cd /me/Dropbox/tracking'
alias dot='cd /me/prj/my/dot'
alias notes='cd /me/Dropbox/notes'
alias documents='cd /me/Dropbox/documents'
alias bookshelf='cd /me/Dropbox/bookshelf'
alias talks='cd /me/prj/talks'
alias downloads='cd ~/Downloads'
alias crash='cd ~/Library/Logs/DiagnosticReports'
alias 3rdparties='cd /me/prj/3rdparties'
alias spikes='cd /me/prj/spikes'

alias zk=' /me/prj/3rdparties/zookeper/bin/zkServer.sh start-foreground'

### RUBY
#export RUBYOPT=rubygems
#RDOCOPT="-S -f html -T hanna"
#export GEM_HOME="/System/Library/Frameworks/Ruby.framework/Versions/Current/usr/lib/ruby/gems/1.8/gems"
#export GEM_PATH=$GEM_HOME:"/Users/reborg/.gem/ruby/1.8"
# Load the Ruby Switcher
#source ~/Documents/cmd/ruby_switcher.sh

### JAVA
export JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.8.0_40.jdk/Contents/Home
# export JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.7.0_51.jdk/Contents/Home
#export JAVA_HOME=/Library/Java/JavaVirtualMachines/1.6.0_65-b14-462.jdk/Contents/Home
export GROOVY_HOME=~/Downloads/groovy-1.6.9
export ROO_HOME=~/Downloads/spring-roo-1.1.5
export GRADLE_HOME=~/Downloads/gradle-1.0-milestone-9

### PROMPT STUFF
export PROMPT_COMMAND='PS1="\[\033[0;33m\][\!]\`if [[ \$? = "0" ]]; then echo "\\[\\033[32m\\]"; else echo "\\[\\033[31m\\]"; fi\`[\u.\h: \`if [[ `pwd|wc -c|tr -d " "` > 18 ]]; then echo "\\W"; else echo "\\w"; fi\`]\$\[\033[0m\] "; echo -ne "\033]0;`hostname -s`:`pwd`\007"'
source "/me/prj/my/dot/rc/git-completion.bash"
#source "/Users/borgar01/prj/3rdparties/dev-bash-git-ps1/bash_git_ps1.sh"

# PATHS
export PATH="$HOME/.cabal/bin:/me/prj/my/dot/cmd:/sw/bin:/usr/local/sbin:/usr/local/mysql/bin:/usr/local/bin:/me/prj/my/dot/vim/bin:$GROOVY_HOME/bin:$ROO_HOME/bin:$GRADLE_HOME/bin:/Applications/Racket v5.3.6/bin:$PATH:/opt/local/bin:$HOME/.rvm/bin:$HOME/Downloads/pig-0.11.1/bin:/Applications/CMake.app/Contents/bin:/me/prj/3rdparties/FlameGraph:/Users/reborg/Downloads/stack-0.1.5.0-x86_64-osx"
export DYLD_LIBRARY_PATH="/Users/reborg/Downloads/opencv-2.4.8/build/lib":"/opt/local/lib"
export LD_LIBRARY_PATH=/opt/local/lib:$LD_LIBRARY_PATH
export LIBRARY_PATH=/opt/local/lib:$LIBRARY_PATH


# Change to a directory given a full or partial name
# You don't have to wrap directory names in quotes either
# WIP
chd() {
  if [ -n "$@" ]; then
    if [ -n "`ls *"$@"* 2>/dev/null`" ]; then
      cd "$@"*
    else
      echo "-bash: chd: "$@": No directory could be extrapolated from partial name"
    fi
  fi
}

# Invoke mister bashrc, with private settings
source ~/.bashrc

# Set the bash edit to vi
# set -o vi

# MacPorts Installer addition on 2011-12-22_at_11:57:14: adding an appropriate PATH variable for use with MacPorts.
# export PATH=/opt/local/bin:/opt/local/sbin:$PATH
# Finished adapting your PATH environment variable for use with MacPorts.
[[ -s "/Users/reborg/.rvm/scripts/rvm" ]] && source "/Users/reborg/.rvm/scripts/rvm"

# [ -s "/Users/reborg/.nvm/nvm.sh" ] && . "/Users/reborg/.nvm/nvm.sh" # This loads nvm
# nvm use 0.10

# Dockerize
export DOCKER_TLS_VERIFY="1"
export DOCKER_HOST="tcp://192.168.99.100:2376"
export DOCKER_CERT_PATH="/Users/reborg/.docker/machine/machines/default"
export DOCKER_MACHINE_NAME="default"

alias dps='docker ps -a'
dstop(){ docker stop $1; }
alias dstop='docker stop'
dstart(){ docker start $1; }
alias dstart='docker start'
dtail(){ docker logs -f $1; }
alias dtail='docker logs -f'
dexec(){ docker exec -i -t $1; }
alias dexec='docker exec -i -t'
drm(){ docker rm $1; }
alias drm='docker rm'
alias dimages='docker images'
alias dcrm='docker-compose rm'
alias dcstop='docker-compose stop'
alias dcup='docker-compose up -d'
alias dctail='docker-compose logs'
alias dlogs='docker-compose logs'
alias l='ls -lart'
alias drmall="docker ps -a |  awk '{print \$1}' | xargs docker rm"
alias hl='highlight -O rtf ${PWD##*/} --line-numbers --font-size 24 --font Monaco --style rdark -W -J 50 -j 3 --src-lang clojure | pbcopy'

# Add GHC 7.8.3 to the PATH, via http://ghcformacosx.github.io/
export GHC_DOT_APP="/Applications/ghc-7.8.3.app"
if [ -d "$GHC_DOT_APP" ]; then
    export PATH="${HOME}/.cabal/bin:${GHC_DOT_APP}/Contents/bin:${PATH}"
fi

##
# Your previous /Users/reborg/.bash_profile file was backed up as /Users/reborg/.bash_profile.macports-saved_2015-03-04_at_12:52:41
##

# MacPorts Installer addition on 2015-03-04_at_12:52:41: adding an appropriate PATH variable for use with MacPorts.
export PATH="/opt/local/bin:/opt/local/sbin:$PATH"
# Finished adapting your PATH environment variable for use with MacPorts.


#THIS MUST BE AT THE END OF THE FILE FOR GVM TO WORK!!!
# [[ -s "/Users/reborg/.gvm/bin/gvm-init.sh" ]] && source "/Users/reborg/.gvm/bin/gvm-init.sh"
