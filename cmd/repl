#!/bin/sh

breakchars="(){}[],^%$#@\"\";:''|\\"

CRITERIUM_JAR="/Users/reborg/.m2/repository/criterium/criterium/0.4.4/criterium-0.4.4.jar"
KEIRIN_JAR="/Users/reborg/.m2/repository/keirin/keirin/1.1.0/keirin-1.1.0.jar"
LOGGING_JAR="/Users/reborg/.m2/repository/org/clojure/tools.logging/0.3.1/tools.logging-0.3.1.jar"
PROFILER_AGENT="-agentpath:/Users/reborg/Downloads/visualvm_139/profiler/lib/deployed/jdk16/mac/libprofilerinterface.jnilib=/Users/reborg/Downloads/visualvm_139/profiler/lib,5140"
NODISASSEMBLE_JAR="/Users/reborg/.m2/repository/nodisassemble/nodisassemble/0.1.3/nodisassemble-0.1.3.jar"


CLOJURE_19="/Users/reborg/.m2/repository/org/clojure/clojure/1.9.0-alpha14/clojure-1.9.0-alpha14.jar"
# CLOJURE_JAR="/Users/reborg/.m2/repository/org/clojure/clojure/1.9.0-cachasm/clojure-1.9.0-cachasm.jar"
# CLOJURE_JAR="/Users/reborg/.m2/repository/org/clojure/clojure/1.9.0-master-SNAPSHOT/clojure-1.9.0-master-SNAPSHOT.jar"
CLOJURE_18="/Users/reborg/.m2/repository/org/clojure/clojure/1.8.0/clojure-1.8.0.jar"
# CLOJURE_JAR="/Users/reborg/.m2/repository/org/clojure/clojure/1.3.0/clojure-1.3.0.jar"
# CLOJURE_JAR="/Users/reborg/prj/3rdparties/clojure/target/clojure-1.8.0-master-SNAPSHOT.jar"
# CLOJURE_JAR="/Users/reborg/.m2/repository/org/clojure/clojure/1.7.0/clojure-1.7.0.jar"
# CLOJURE_JAR="/Users/reborg/Downloads/clojure-1.6.0.jar"

# Use the following to generate the completion file:
# exec java -cp "$CLOJURE_19" clojure.main
# (def completions (keys (ns-publics (find-ns 'clojure.core)))) (with-open [f (java.io.BufferedWriter. (java.io.FileWriter. (str (System/getenv "HOME") "/.clj_completions")))] (.write f (apply str (interpose \newline completions))))

CLOJURE=$CLOJURE_18

if [ "$1" = "--with-profiler" ]; then
  JAVACP="$CLOJURE"
  JAVAOPTS="$PROFILER_AGENT -Xmx512M"

elif [ "$1" = "--with-criterium" ]; then
  JAVACP="$CLOJURE:$CRITERIUM_JAR"
  JAVAOPTS="-Xmx512M"

elif [ "$1" = "--with-keirin" ]; then
  JAVACP="$CLOJURE:$KEIRIN_JAR:$LOGGING_JAR"
  JAVAOPTS="-server -Xbatch -Xloggc:gc.out -XX:-TieredCompilation -Xmx1g -Xms1g"

elif [ "$1" = "--with-disassembler" ]; then
  JAVACP="$CLOJURE:$NODISASSEMBLE_JAR"
  JAVAOPTS="-Xmx512M"

elif [ "$1" = "--boost-memory" ]; then
  JAVACP="$CLOJURE"
  JAVAOPTS="-Xmx2G"
else
  JAVACP="$CLOJURE"
  JAVAOPTS="-Xmx512M"
fi

echo "Starting REPL"
echo "Classpath $JAVACP"
echo "Options $JAVAOPTS"
exec rlwrap --remember -c -b "$breakchars" -f "$HOME"/.clj_completions java $JAVAOPTS -cp $JAVACP clojure.main
