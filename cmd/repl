#!/bin/sh
M2_REPO="/Users/reborg/.m2/repository"

breakchars="(){}[],^%$#@\"\";:''|\\"

CRITERIUM_JAR="$M2_REPO/criterium/criterium/0.4.4/criterium-0.4.4.jar"
KEIRIN_JAR="$M2_REPO/keirin/keirin/1.1.0/keirin-1.1.0.jar"
LOGGING_JAR="$M2_REPO/org/clojure/tools.logging/0.3.1/tools.logging-0.3.1.jar"
PROFILER_AGENT="-agentpath:/Applications/VisualVM.app/Contents/profiler/lib/deployed/jdk16/mac/libprofilerinterface.jnilib=/Applications/VisualVM.app/Contents/profiler/lib,5140"
NODISASSEMBLE_JAR="$M2_REPO/nodisassemble/nodisassemble/0.1.3/nodisassemble-0.1.3.jar:$M2_REPO/org/eclipse/jdt/org.eclipse.jdt.core/3.7.1/org.eclipse.jdt.core-3.7.1.jar:$M2_REPO/org/eclipse/core/org.eclipse.core.runtime/3.7.0/org.eclipse.core.runtime-3.7.0.jar:$M2_REPO/org/eclipse/osgi/org.eclipse.osgi/3.7.1/org.eclipse.osgi-3.7.1.jar"

CLOJURE_BLEEDING="$M2_REPO/org/clojure/clojure/1.10.0-master-SNAPSHOT/clojure-1.10.0-master-SNAPSHOT.jar:$M2_REPO/org/clojure/spec.alpha/0.1.143/spec.alpha-0.1.143.jar:$M2_REPO/org/clojure/core.specs.alpha/0.1.24/core.specs.alpha-0.1.24.jar"
CLOJURE_BLEEDING2="$M2_REPO/org/clojure/clojure/1.10.1-master-SNAPSHOT/clojure-1.10.1-master-SNAPSHOT.jar:$M2_REPO/org/clojure/spec.alpha/0.1.143/spec.alpha-0.1.143.jar:$M2_REPO/org/clojure/core.specs.alpha/0.1.24/core.specs.alpha-0.1.24.jar"
CLOJURE_PARALLEL="$M2_REPO/org/clojure/clojure/1.9.0/clojure-1.9.0.jar:$M2_REPO/criterium/criterium/0.4.4/criterium-0.4.4.jar:$M2_REPO/parallel/parallel/0.1/parallel-0.1.jar:$M2_REPO/org/clojure/spec.alpha/0.1.143/spec.alpha-0.1.143.jar:$M2_REPO/org/clojure/core.specs.alpha/0.1.24/core.specs.alpha-0.1.24.jar"
CLOJURE_XCHART="$M2_REPO/org/clojure/clojure/1.8.0/clojure-1.8.0.jar:$M2_REPO/com/hypirion/clj-xchart/0.2.0/clj-xchart-0.2.0.jar:$M2_REPO/org/knowm/xchart/xchart/3.2.0/xchart-3.2.0.jar:$M2_REPO/de/erichseifert/vectorgraphics2d/VectorGraphics2D/0.11/VectorGraphics2D-0.11.jar:$M2_REPO/criterium/criterium/0.4.4/criterium-0.4.4.jar:$M2_REPO/org/clojure/tools.nrepl/0.2.12/tools.nrepl-0.2.12.jar:$M2_REPO/clojure-complete/clojure-complete/0.2.4/clojure-complete-0.2.4.jar"
CLOJURE_ASYNC="$M2_REPO/org/clojure/clojure/1.8.0/clojure-1.8.0.jar:$M2_REPO/org/clojure/core.async/0.3.443/core.async-0.3.443.jar:$M2_REPO/org/clojure/tools.analyzer/0.6.9/tools.analyzer-0.6.9.jar:$M2_REPO/org/clojure/tools.nrepl/0.2.12/tools.nrepl-0.2.12.jar:$M2_REPO/clojure-complete/clojure-complete/0.2.4/clojure-complete-0.2.4.jar:$M2_REPO/org/clojure/tools.reader/1.0.0-beta4/tools.reader-1.0.0-beta4.jar:$M2_REPO/org/clojure/core.memoize/0.5.9/core.memoize-0.5.9.jar:$M2_REPO/org/clojure/tools.analyzer.jvm/0.7.0/tools.analyzer.jvm-0.7.0.jar:$M2_REPO/org/ow2/asm/asm-all/4.2/asm-all-4.2.jar:$M2_REPO/org/clojure/data.priority-map/0.0.7/data.priority-map-0.0.7.jar:$M2_REPO/org/clojure/core.cache/0.6.5/core.cache-0.6.5.jar"

CLOJURE_19="$M2_REPO/org/clojure/clojure/1.9.0/clojure-1.9.0.jar:$M2_REPO/org/clojure/spec.alpha/0.1.143/spec.alpha-0.1.143.jar:$M2_REPO/org/clojure/core.specs.alpha/0.1.24/core.specs.alpha-0.1.24.jar"
# CLOJURE_JAR="$M2_REPO/org/clojure/clojure/1.9.0-cachasm/clojure-1.9.0-cachasm.jar"
# CLOJURE_JAR="$M2_REPO/org/clojure/clojure/1.9.0-master-SNAPSHOT/clojure-1.9.0-master-SNAPSHOT.jar"
CLOJURE_18="$M2_REPO/org/clojure/clojure/1.8.0/clojure-1.8.0.jar"
CLOJURE_121="$M2_REPO/org/clojure/clojure/1.2.1/clojure-1.2.1.jar"
# CLOJURE_JAR="$M2_REPO/org/clojure/clojure/1.3.0/clojure-1.3.0.jar"
# CLOJURE_JAR="/Users/reborg/prj/3rdparties/clojure/target/clojure-1.8.0-master-SNAPSHOT.jar"
# CLOJURE_JAR="$M2_REPO/org/clojure/clojure/1.7.0/clojure-1.7.0.jar"
# CLOJURE_JAR="/Users/reborg/Downloads/clojure-1.6.0.jar"

# Use the following to generate the completion file:
# exec java -cp "$CLOJURE_19" clojure.main
# (def completions (keys (ns-publics (find-ns 'clojure.core)))) (with-open [f (java.io.BufferedWriter. (java.io.FileWriter. (str (System/getenv "HOME") "/.clj_completions")))] (.write f (apply str (interpose \newline completions))))

CLOJURE=$CLOJURE_19

echo "repl --help for options"

if [ "$1" = "--with-profiler" ]; then
  JAVACP="$CLOJURE"
  JAVAOPTS="$PROFILER_AGENT -Xmx512M"

elif [ "$1" = "-criterium" ]; then
  JAVACP="$CLOJURE:$CRITERIUM_JAR"
  JAVAOPTS="-Xmx2G"

elif [ "$1" = "-keirin" ]; then
  JAVACP="$CLOJURE:$KEIRIN_JAR:$LOGGING_JAR"
  JAVAOPTS="-server -Xbatch -Xloggc:gc.out -XX:-TieredCompilation -Xmx1g -Xms1g"

elif [ "$1" = "-disassemble" ]; then
  JAVACP="$CLOJURE:$NODISASSEMBLE_JAR"
  JAVAOPTS="-Xmx512M"

elif [ "$1" = "-small" ]; then
  JAVACP="$CLOJURE"
  JAVAOPTS="-Xmx128M"

elif [ "$1" = "-bleeding" ]; then
  JAVACP="$CLOJURE_BLEEDING:$CRITERIUM_JAR"
  JAVAOPTS="-Xmx2G"

elif [ "$1" = "-bleeding2" ]; then
  JAVACP="$CLOJURE_BLEEDING2:$CRITERIUM_JAR"
  JAVAOPTS="-Xmx2G"

elif [ "$1" = "-parallel" ]; then
  JAVACP="$CLOJURE_PARALLEL"
  JAVAOPTS="-Xmx512M"

elif [ "$1" = "-xchart" ]; then
  JAVACP="$CLOJURE_XCHART"
  JAVAOPTS="-Xmx512M"

elif [ "$1" = "-async" ]; then
  JAVACP="$CLOJURE_ASYNC"
  JAVAOPTS="-Xmx512M"

elif [ "$1" = "-18" ]; then
  CLOJURE=$CLOJURE_18
  JAVACP="$CLOJURE"
  JAVAOPTS="-Xmx2G"

elif [ "$1" = "-h" ]; then
  cat `which repl` | grep "then" | awk -F= '{print $2}' | awk -F] '{print $1}'
  exit 0

else
  JAVACP="$CLOJURE"
  JAVAOPTS="-Xmx2G"
fi

echo "Starting REPL"
echo "Classpath $JAVACP"
echo "Options $JAVAOPTS"
exec rlwrap --remember -c -b "$breakchars" -f "$HOME"/.clj_completions java $JAVAOPTS -cp $JAVACP:. clojure.main
